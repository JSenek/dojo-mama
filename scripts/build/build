# dojo-mama: a JavaScript framework
# Copyright (C) 2014 Clemson University
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

# based on boilerplate build script
# https://github.com/csnover/dojo-boilerplate

#!/usr/bin/env bash
set -e

# Build target
if [ "$1" = "" ]; then
    APP=app
else
	APP=$1
fi
# Tier
if [ "$2" = "development" ]; then
    TIER=development
else
	TIER=production
fi
# cd to root of branch
cd ../..
# Base directory for this entire project
BASEDIR=$(cd $(dirname $0) && pwd)
# Source directory for unbuilt code
SRCDIR=$BASEDIR/src
# Directory containing dojo build utilities
TOOLSDIR=$SRCDIR/util/buildscripts
# Destination directory for built code
if [ ! -d $BASEDIR/dist ]; then
	mkdir $BASEDIR/dist
fi
DISTDIR=$BASEDIR/dist/$APP-$TIER
# Module ID of the main application package loader configuration
LOADERMID=$APP/run
# Main application package loader configuration
LOADERCONF=$SRCDIR/$LOADERMID.js
# Main application package build configuration
PROFILEDIR=$BASEDIR/profiles
# Base profile
BASEPROFILE=$PROFILEDIR/base.profile.js
# Local scripts and build tools
SCRIPTSDIR=$BASEDIR/scripts
# Dojo build profile
PROFILE=$PROFILEDIR/$APP-$TIER.profile.js


if !(which node >/dev/null && which java >/dev/null); then
	echo Need node.js and java to build!
	exit 1
fi

if [ ! -d $TOOLSDIR ]; then
	echo "Can't find Dojo build tools -- did you make install?"
	exit 1
fi

echo App: $APP
echo Tier: $TIER
echo Destination: $DISTDIR
echo Profile: $PROFILE

cd $SCRIPTSDIR

# Install dependencies
./install

# generate profile build layers
echo Generating profiles
if [ -f $PROFILE ]; then
    rm $PROFILE
fi
cp $BASEPROFILE $PROFILE
node build/module_layers.js $APP >> $PROFILE

# don't strip console logs from development builds
if [ $TIER = development ]; then
	echo "profile.stripConsole = 'none';" >> $PROFILE
fi

# compile less
echo Compiling less
./compile_less

# delete previous distribution
echo Deleting old files
rm -rf $DISTDIR

# copy root level static resources
echo Copying static resources
mkdir $DISTDIR
cp -v $SRCDIR/favicon.ico $DISTDIR
# Copy & minify index.html
sed s/{{APP}}/$APP/g $SRCDIR/$TIER.html | tr -d '\n' > $DISTDIR/index.html

# copy additional static resources (non-javascript)
mkdir -p $DISTDIR/static
rsync -av --exclude .svn --exclude *.js $SRCDIR/static/ $DISTDIR/static/
# minify static js
cd $SRCDIR/static
for f in *.js
do
	if [[ "$f" =~ \.min\.js$ ]]; then
		echo "Copying static/$f"
		cp $f $DISTDIR/static/$f
	else
		echo "Minifying static/$f"
		java -jar $SRCDIR/util/shrinksafe/shrinksafe.jar $f > $DISTDIR/static/$f
	fi
done
cd -

# backend services
rsync -av --exclude .svn --exclude feed/static/* $SRCDIR/srv/ $DISTDIR/srv/

# run the dojo build
echo Building $APP
cd $TOOLSDIR
node ../../dojo/dojo.js load=build --require $LOADERCONF --profile $PROFILE --releaseDir $DISTDIR
echo Build complete
